# frozen_string_literal:true

require 'minitest/autorun'
require_relative '../annual_calendar'

class AnnualCalendarTest < Minitest::Test
  def test_generate_oldest_year
    annual_calendar = AnnualCalendar.new(1)
    expected = [
      '                             1',
      '         1月                    2月                    3月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '                   1         1  2  3  4  5         1  2  3  4  5',
      ' 2  3  4  5  6  7  8   6  7  8  9 10 11 12   6  7  8  9 10 11 12',
      ' 9 10 11 12 13 14 15  13 14 15 16 17 18 19  13 14 15 16 17 18 19',
      '16 17 18 19 20 21 22  20 21 22 23 24 25 26  20 21 22 23 24 25 26',
      '23 24 25 26 27 28 29  27 28                 27 28 29 30 31',
      '30 31',
      '',
      '         4月                    5月                    6月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '                1  2   1  2  3  4  5  6  7            1  2  3  4',
      ' 3  4  5  6  7  8  9   8  9 10 11 12 13 14   5  6  7  8  9 10 11',
      '10 11 12 13 14 15 16  15 16 17 18 19 20 21  12 13 14 15 16 17 18',
      '17 18 19 20 21 22 23  22 23 24 25 26 27 28  19 20 21 22 23 24 25',
      '24 25 26 27 28 29 30  29 30 31              26 27 28 29 30',
      '',
      '',
      '         7月                    8月                    9月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '                1  2      1  2  3  4  5  6               1  2  3',
      ' 3  4  5  6  7  8  9   7  8  9 10 11 12 13   4  5  6  7  8  9 10',
      '10 11 12 13 14 15 16  14 15 16 17 18 19 20  11 12 13 14 15 16 17',
      '17 18 19 20 21 22 23  21 22 23 24 25 26 27  18 19 20 21 22 23 24',
      '24 25 26 27 28 29 30  28 29 30 31           25 26 27 28 29 30',
      '31',
      '',
      '        10月                   11月                   12月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '                   1         1  2  3  4  5               1  2  3',
      ' 2  3  4  5  6  7  8   6  7  8  9 10 11 12   4  5  6  7  8  9 10',
      ' 9 10 11 12 13 14 15  13 14 15 16 17 18 19  11 12 13 14 15 16 17',
      '16 17 18 19 20 21 22  20 21 22 23 24 25 26  18 19 20 21 22 23 24',
      '23 24 25 26 27 28 29  27 28 29 30           25 26 27 28 29 30 31',
      '30 31'
    ].join("\n")
    assert_equal expected, annual_calendar.generate
  end

  def test_generate_latest_year
    annual_calendar = AnnualCalendar.new(9999)
    expected = [
      '                            9999',
      '         1月                    2月                    3月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '                1  2      1  2  3  4  5  6      1  2  3  4  5  6',
      ' 3  4  5  6  7  8  9   7  8  9 10 11 12 13   7  8  9 10 11 12 13',
      '10 11 12 13 14 15 16  14 15 16 17 18 19 20  14 15 16 17 18 19 20',
      '17 18 19 20 21 22 23  21 22 23 24 25 26 27  21 22 23 24 25 26 27',
      '24 25 26 27 28 29 30  28                    28 29 30 31',
      '31',
      '',
      '         4月                    5月                    6月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '             1  2  3                     1         1  2  3  4  5',
      ' 4  5  6  7  8  9 10   2  3  4  5  6  7  8   6  7  8  9 10 11 12',
      '11 12 13 14 15 16 17   9 10 11 12 13 14 15  13 14 15 16 17 18 19',
      '18 19 20 21 22 23 24  16 17 18 19 20 21 22  20 21 22 23 24 25 26',
      '25 26 27 28 29 30     23 24 25 26 27 28 29  27 28 29 30',
      '                      30 31',
      '',
      '         7月                    8月                    9月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '             1  2  3   1  2  3  4  5  6  7            1  2  3  4',
      ' 4  5  6  7  8  9 10   8  9 10 11 12 13 14   5  6  7  8  9 10 11',
      '11 12 13 14 15 16 17  15 16 17 18 19 20 21  12 13 14 15 16 17 18',
      '18 19 20 21 22 23 24  22 23 24 25 26 27 28  19 20 21 22 23 24 25',
      '25 26 27 28 29 30 31  29 30 31              26 27 28 29 30',
      '',
      '',
      '        10月                   11月                   12月',
      '日 月 火 水 木 金 土  日 月 火 水 木 金 土  日 月 火 水 木 金 土',
      '                1  2      1  2  3  4  5  6            1  2  3  4',
      ' 3  4  5  6  7  8  9   7  8  9 10 11 12 13   5  6  7  8  9 10 11',
      '10 11 12 13 14 15 16  14 15 16 17 18 19 20  12 13 14 15 16 17 18',
      '17 18 19 20 21 22 23  21 22 23 24 25 26 27  19 20 21 22 23 24 25',
      '24 25 26 27 28 29 30  28 29 30              26 27 28 29 30 31',
      '31'
    ].join("\n")
    assert_equal expected, annual_calendar.generate
   end
end
